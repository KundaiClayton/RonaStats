{"version":3,"sources":["components/navigation/navBar.js","components/pages/About.js","components/cards/CardItem.js","components/cards/Cards.js","components/search/Search.js","components/cards/Flags.js","components/cards/Graph.js","components/pages/Home.js","components/cards/ListBox.js","components/pages/Rank.js","components/navigation/Footer.js","App.js","serviceWorker.js","index.js"],"names":["navBar","styles","color","textDecoration","to","style","textAlign","className","About","margin","CardItem","country","global","Container","Row","Col","md","Card","border","width","Body","Title","Text","end","confirmed","value","duration","Subtitle","Footer","Date","lastUpdate","toDateString","recovered","deaths","Cards","isLoading","isGlobal","Search","getQuery","useState","text","setText","type","name","placeholder","onChange","e","q","target","autoFocus","Flags","countryName","flag","src","Graph","barChart","data","labels","datasets","label","backgroundColor","options","legend","display","title","Home","items","setCountries","setIsLoading","setGlobal","setCountryName","query","setQuery","setFlag","useEffect","length","a","axios","get","res","globalSummary","fetchItems","url","console","log","getFlag","ListBox","props","showOrder","countryRegion","index","split","reverse","join","toggleProvinceState","provinceState","Ranks","countryRank","setCountryRank","lastNumber","setLastNumber","showRow","loading","setLoading","then","catch","err","filter","map","key","b","marginBottom","getFullYear","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"sKAIe,SAASA,IACpB,IAAMC,EAAO,CACTC,MAAM,QACNC,eAAe,QAEnB,OAEI,6BACC,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAOJ,GAClB,wBAAII,MAAO,CAACC,UAAU,WAAtB,cAEA,wBAAIC,UAAU,aACT,kBAAC,IAAD,CAAMH,GAAI,IAAIC,MAAOJ,GACpB,qCAEF,kBAAC,IAAD,CAAMG,GAAG,QAASC,MAAOJ,GACvB,sCAGF,kBAAC,IAAD,CAAMG,GAAG,SAAUC,MAAOJ,GACxB,wC,WCbFO,MATf,WACI,OACI,yBAAKD,UAAU,aACX,mDACA,mH,sGCFNN,EAAO,CACTQ,OAAO,OACPH,UAAU,UAyDCI,EAtDE,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QAAQC,EAAY,EAAZA,OACvB,OACI,kBAACC,EAAA,EAAD,CAAWN,UAAU,aACrB,wBAAIF,MAAOJ,GAASW,GAChB,kBAACE,EAAA,EAAD,CAAKP,UAAU,6BACX,kBAACQ,EAAA,EAAD,CAAKC,GAAG,QACP,kBAACH,EAAA,EAAD,KACG,kBAACI,EAAA,EAAD,CAAMC,OAAO,UAAUb,MAAO,CAAEc,MAAO,QAASV,OAAO,SACvD,kBAACQ,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,KAAN,KACA,wBAAIjB,MAAQ,CAAEH,MAAM,YAApB,IAAkC,kBAAC,IAAD,CAASqB,IAAKZ,EAAQa,UAAUC,MAAOC,SAAU,QAEnF,kBAACT,EAAA,EAAKU,SAAN,CAAepB,UAAU,mBAAkB,oEAE/C,kBAACU,EAAA,EAAKW,OAAN,CAAarB,UAAU,qBAAqB,IAAIsB,KAAKlB,EAAQmB,YAAYC,mBAI7E,6BACA,kBAAChB,EAAA,EAAD,CAAMC,GAAG,QACL,kBAACH,EAAA,EAAD,KACA,kBAACI,EAAA,EAAD,CAAMC,OAAO,UAAUb,MAAO,CAAEc,MAAO,QAAQV,OAAO,SACtD,kBAACQ,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,KAAN,KACA,wBAAIjB,MAAQ,CAAEH,MAAM,YAAa,kBAAC,IAAD,CAASqB,IAAKZ,EAAQqB,UAAUP,MAAOC,SAAU,QAElF,kBAACT,EAAA,EAAKU,SAAN,CAAepB,UAAU,mBAAkB,uEAE/C,kBAACU,EAAA,EAAKW,OAAN,CAAarB,UAAU,qBAAqB,IAAIsB,KAAKlB,EAAQmB,YAAYC,eAAzE,QAIJ,kBAAChB,EAAA,EAAD,CAAMC,GAAG,QACL,kBAACH,EAAA,EAAD,KACA,kBAACI,EAAA,EAAD,CAAOC,OAAO,SAASb,MAAO,CAAEc,MAAO,QAAQV,OAAO,SACtD,kBAACQ,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,eACA,kBAACJ,EAAA,EAAKK,KAAN,KACA,wBAAIjB,MAAQ,CAAEH,MAAM,YAAc,kBAAC,IAAD,CAASqB,IAAKZ,EAAQsB,OAAOR,MAAOC,SAAU,QAEhF,kBAACT,EAAA,EAAKU,SAAN,CAAepB,UAAU,mBAAkB,kEAE/C,kBAACU,EAAA,EAAKW,OAAN,CAAarB,UAAU,qBAAqB,IAAIsB,KAAKlB,EAAQmB,YAAYC,eAAzE,WCjDL,SAASG,EAAT,GAA8C,IAA9BvB,EAA6B,EAA7BA,QAAQwB,EAAqB,EAArBA,UAAUC,EAAW,EAAXA,SAC7C,OAAOD,EAAY,0CAAoB,iCAIlC,kBAACtB,EAAA,EAAD,KACG,kBAAC,EAAD,CAAUF,QAASA,EAASC,OAAQwB,MCPhD,IAiCeC,EAjCF,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAAa,EACHC,mBAAS,IADN,mBACjBC,EADiB,KACZC,EADY,KAOxB,OACI,6BACI,kBAAC5B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,6BACI,8BACA,2BACI2B,KAAK,OACLC,KAAK,OACLC,YAAY,oBACZnB,MAAOe,EACPK,SAAU,SAACC,GAAD,OAjBlBC,EAiBgCD,EAAEE,OAAOvB,MAhBrDgB,EAAQM,QACRT,EAASS,GAFE,IAACA,GAkBQE,WAAS,WCGtBC,MAtBf,YAA2C,EAA3BvC,QAA2B,EAAnBwC,YAAoB,IAARC,EAAO,EAAPA,KAahC,OACI,6BACG,yBAAKC,IAAKD,EAAKA,OACf,4BAAKA,EAAKT,Q,QCsBNW,MArCf,YAAuC,IAAvB3C,EAAsB,EAAtBA,QAAQwC,EAAc,EAAdA,YACdI,EACF5C,EAAQa,UACN,kBAAC,IAAD,CACEgC,KAAM,CACJC,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,UAAW,UAAW,WACxCJ,KAAM,CAAC7C,EAAQa,UAAUC,MAAOd,EAAQqB,UAAUP,MAAOd,EAAQsB,OAAOR,UAI9EoC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAMvB,KAAK,aAAD,OAAeW,OAG7C,KAGR,OACI,yBAAK5C,UAAU,SACX,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GAEFuC,OCoCVU,MA7Df,WAAiB,IAAD,EACa1B,mBAAS,IADtB,mBACP2B,EADO,KACDC,EADC,OAEqB5B,mBAAS,IAF9B,gCAGiBA,oBAAS,IAH1B,mBAGPJ,EAHO,KAGGiC,EAHH,OAIa7B,mBAAS,IAJtB,mBAIPH,EAJO,KAIEiC,EAJF,OAKuB9B,mBAAS,IALhC,mBAKO+B,GALP,aAMS/B,mBAAS,IANlB,mBAMPgC,EANO,KAMDC,EANC,OAOOjC,mBAAS,IAPhB,mBAOPa,EAPO,KAOFqB,EAPE,KA8Cd,OApCAC,qBAAU,WAGV,GAAW,YAARH,GAAoC,IAAfA,EAAMI,OAAW,EACpB,uCAAC,4BAAAC,EAAA,sEACDC,IAAMC,IAAN,kCADC,OACZC,EADY,OAGlBZ,EAAaY,EAAIvB,MACjBY,GAAa,GACbC,EAAU,kBALQ,2CAAD,qDAOnBW,OAEG,CACH,IAAMC,EAAU,uCAAC,4BAAAL,EAAA,sEACCC,IAAMC,IAAN,mDAAsDP,IADvD,OACTQ,EADS,OAGfZ,EAAaY,EAAIvB,MACjBY,GAAa,GACbC,EAAUE,cACXD,EAAeC,GANC,2CAAD,sDAQL,uCAAE,8BAAAK,EAAA,6DACPM,EADO,gDACsCX,GADtC,SAGGM,IAAMC,IAAII,GAHb,OAGPH,EAHO,OAIbI,QAAQC,IAAIL,EAAIvB,MAChBiB,EAAQM,EAAIvB,MALC,2CAAF,qDAOb6B,GACAJ,OAIC,CAACV,IAGC,kBAAC1D,EAAA,EAAD,KAEE,kBAAC,EAAD,CAAQyB,SAAU,SAACS,GAAD,OAAKyB,EAASzB,MAChC,kBAAC,EAAD,CAAOK,KAAMA,IAGZ,kBAAClB,EAAD,CAAOvB,QAASuD,EAAO/B,UAAWA,EAAWC,SAAUA,IACvD,kBAAC,EAAD,CAAOzB,QAASuD,EAAOf,YAAaf,MC9B7BkD,EA9BC,SAACC,GACf,OACE,kBAAC,WAAD,KACE,4BACE,yBAAKhF,UAAU,eACb,yBAAKA,UAAU,YACXgF,EAAMC,UAAUD,EAAM/B,KAAKiC,cAAeF,EAAMG,SAItD,yBAAKnF,UAAU,gBACb,yBAAKA,UAAU,gBACZgF,EAAM/B,KAAKiC,cAAcE,MAAM,MAAMC,UAAUC,KAAK,KADvD,IAC8D,IAC5D,0BAAMtF,UAAU,uBAAuBgF,EAAMO,oBAAoBP,EAAM/B,KAAKuC,cAAeR,EAAM/B,KAAKiC,iBAGxG,yBAAKlF,UAAU,gBACb,0BAAMA,UAAU,kCAAkCgF,EAAM/B,KAAKhC,WAC7D,0BAAMjB,UAAU,kCAAkCgF,EAAM/B,KAAKxB,WAC7D,0BAAMzB,UAAU,iCAAiCgF,EAAM/B,KAAKvB,WAK/DsD,EAAMG,MAAQ,IAAM,GAAM,yBAAKnF,UAAU,uBAA8B,KCoCjEyF,EAzDD,WAAO,IAAD,EACoBzD,mBAAS,IAD7B,mBACX0D,EADW,KACEC,EADF,OAEkB3D,mBAAS,GAF3B,mBAEX4D,EAFW,KAECC,EAFD,OAGA7D,mBAAS,IAApB8D,EAHW,sBAIY9D,oBAAS,GAJrB,mBAIX+D,EAJW,KAIFC,EAJE,KAMlB7B,qBAAU,WACRG,IAAMC,IAAI,4CACP0B,MAAK,SAAAzB,GACJmB,EAAenB,EAAIvB,SAEpBgD,MAAK,WACJD,GAAW,MAEZE,OAAM,SAAAC,GACLvB,QAAQC,IAAIsB,QAEf,IAgBH,OANAhC,qBAAU,WACRuB,EAAYU,QAAO,SAACnD,EAAMkC,GAAP,MACM,aAAvBlC,EAAKiC,cAA+BW,EAAcV,EAAQ,GAAK,QAEhE,CAACO,IAGF,yBAAK1F,UAAU,WAEX+F,EAAU,0CACV,wBAAI/F,UAAU,aAEV0F,EACCU,QAAO,SAACnD,EAAMkC,GAAP,OAAkBA,EAAQW,GAAkC,aAAvB7C,EAAKiC,iBACjDmB,KAAI,SAACpD,EAAMkC,GAAP,OACH,kBAAC,EAAD,CACEmB,IAAKnB,EACLA,MAAOA,EACPlC,KAAMA,EACNgC,UAAW,SAACZ,EAAGkC,GAAJ,OAvBP,SAACrB,EAAeC,GAAhB,OAChB,kBAAC,WAAD,KAA8B,aAAlBD,EAAgCU,EAAaT,EAAQ,GAsBhCF,CAAUZ,EAAGkC,IAClChB,oBAAqB,SAAClB,EAAGkC,GAAJ,OA5BSrB,EA4BwBqB,GA5BvCf,EA4BoCnB,IA3B7CmB,IAAkBN,EAApC,WAAyDM,EAAzD,KAA4E,GADlD,IAACA,EAAeN,WCV/B7D,MAZf,WACI,OACI,yBAAKrB,UAAU,eACX,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKV,MAAO,CAAC0G,aAAa,SAA1B,8BAAgE,IAAIlF,MAAOmF,cAA3E,+BC2BLC,MAzBf,WACE,OACE,yBAAK1G,UAAU,sBAEb,yBAAKA,UAAU,gBAEjB,kBAAC,IAAD,KACA,kBAAC,EAAD,MAGE,kBAACO,EAAA,EAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,IAAIC,UAAWnD,IACjC,kBAAC,IAAD,CAAQkD,KAAK,SAASC,UAAW5G,IACjC,kBAAC,IAAD,CAAQ2G,KAAK,QAAQC,UAAWpB,QAMxC,kBAAC,EAAD,QCjBgBqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEd1B,OAAM,SAAA2B,GACLjD,QAAQiD,MAAMA,EAAMC,a","file":"static/js/main.8d670f1b.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Container,Row,Col,Card,Button} from \"react-bootstrap\"\r\n\r\nexport default function navBar() {\r\n    const styles={\r\n        color:'black',\r\n        textDecoration:'none'\r\n    }\r\n    return (\r\n      \r\n        <nav >\r\n         <Link to=\"/\" style={styles}>\r\n           <h2 style={{textAlign:'center'}}>RonaStats</h2> \r\n           </Link>\r\n           <ul className=\"nav-links\">\r\n                <Link to =\"/\" style={styles}>\r\n                 <li>Home</li>\r\n               </Link>\r\n               <Link to=\"/rank\"  style={styles}>\r\n                 <li>Ranks</li>\r\n               </Link>\r\n               \r\n               <Link to=\"/about\"  style={styles}>\r\n                 <li>About</li>\r\n               </Link>\r\n              \r\n           </ul> \r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>About RonaStats App</h1>\r\n            <p>RonaStats is an app with all the information about corona virus in a central place</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport {Container,Row,Col,Card,Button} from \"react-bootstrap\"\r\nimport CountUp from  'react-countup'\r\n\r\nconst styles={\r\n    margin:'auto',\r\n    textAlign:'center'\r\n}\r\n\r\nconst CardItem = ({country,global}) => {\r\n    return (\r\n        <Container className=\"container\" >\r\n        <h3 style={styles}>{global}</h3>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col md=\"auto\" >\r\n                 <Container>\r\n                    <Card border=\"warning\" style={{ width: '22rem' ,margin:'1rem'}}>\r\n                    <Card.Body>\r\n                        <Card.Title>Confirmed</Card.Title>\r\n                        <Card.Text>\r\n                        <h5 style={ { color:'#f0ad4e' }}> <CountUp end={country.confirmed.value} duration={1.5}/></h5>\r\n                        </Card.Text>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\"><h6>Number of active cases of covid-19</h6></Card.Subtitle>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"blockquote-footer\">{new Date(country.lastUpdate).toDateString()}</Card.Footer>\r\n                    </Card>\r\n                    </Container>\r\n                </Col>\r\n                <br/>\r\n                <Col  md=\"auto\" >\r\n                    <Container>\r\n                    <Card border=\"success\" style={{ width: '22rem',margin:'1rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>Recovered</Card.Title>\r\n                        <Card.Text>\r\n                        <h5 style={ { color:'#5cb85c' }}><CountUp end={country.recovered.value} duration={1.5}/></h5>\r\n                        </Card.Text>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\"><h6>Number of Recovered cases of covid-19</h6></Card.Subtitle>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"blockquote-footer\">{new Date(country.lastUpdate).toDateString()} </Card.Footer>\r\n                    </Card>\r\n                    </Container>\r\n                </Col>\r\n                <Col  md=\"auto\">\r\n                    <Container>\r\n                    <Card  border=\"danger\" style={{ width: '22rem',margin:'1rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>Deaths</Card.Title>\r\n                        <Card.Text>\r\n                        <h5 style={ { color:'#d9534f' }} ><CountUp end={country.deaths.value} duration={1.6}/></h5>\r\n                        </Card.Text>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\"><h6>Number of deaths due to covid-19</h6></Card.Subtitle> \r\n                    </Card.Body>\r\n                    <Card.Footer className=\"blockquote-footer\">{new Date(country.lastUpdate).toDateString()} </Card.Footer>\r\n                    </Card>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n       \r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default CardItem\r\n","import React from 'react'\r\nimport CardItem from './CardItem'\r\nimport {Container,Row,Col,Card,Button} from \"react-bootstrap\"\r\n\r\nexport default function Cards({country,isLoading,isGlobal}) {\r\n    return isLoading ? <h1>Loading...</h1>:<section>\r\n         {/* {country.map(item=>(\r\n             <div>{item.confirmed}</div>\r\n         ))} */}\r\n         <Container >\r\n            <CardItem country={country} global={isGlobal}></CardItem> \r\n         </Container>\r\n        \r\n    </section>\r\n    \r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Container,Row,Col} from \"react-bootstrap\"\r\n\r\nconst Search=({getQuery}) =>{\r\n    const [text,setText]=useState('')\r\n    const onChange=(q)=>{\r\n        setText(q)\r\n        getQuery(q)\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <Container >\r\n                <Row>\r\n                    <Col>\r\n                    <div>\r\n                        <form >\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"text\" \r\n                            placeholder=\"Search Country...\"\r\n                            value={text}\r\n                            onChange={(e)=>onChange(e.target.value)}\r\n                            autoFocus\r\n                        />\r\n                        </form>\r\n                       \r\n                        \r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Flags({country,countryName,flag}) {\r\n//     console.log(countryName)\r\n//     const url=`https://restcountries.eu/rest/v2/name/${countryName}`\r\n//    // const url=`https://public-us.opendatasoft.com/api/records/1.0/search/?dataset=country-flags&q=&facet=${country}`\r\n//     const [flag,setFlag]=useState({})\r\n//     useEffect(() => {\r\n//         const getFlag= async ()=>{\r\n//             const res=await axios.get(url)\r\n//             console.log(res.data)\r\n//             setFlag(res.data)\r\n//         }\r\n//         getFlag()\r\n//     }, [])\r\n    return (\r\n        <div>\r\n           <img src={flag.flag}/>\r\n           <h2>{flag.name}</h2>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flags\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Bar} from 'react-chartjs-2'\r\nimport {Container,Row,Col,Card,Button} from \"react-bootstrap\"\r\n\r\nfunction Graph({country,countryName}) {\r\n    const barChart = (\r\n        country.confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['#f0ad4e', '#5cb85c', '#d9534f'],\r\n                  data: [country.confirmed.value, country.recovered.value, country.deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Graphical ${countryName}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n    \r\n    return (\r\n        <div className=\"graph\">\r\n            <Container >\r\n                <Row>\r\n                    <Col md>\r\n                       \r\n                        {barChart} \r\n                    \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport Cards from '../cards/Cards';\r\nimport Search from '../search/Search';\r\nimport Flags from '../cards/Flags';\r\nimport Graph from '../cards/Graph';\r\nimport {Container,Row,Col,Card,Button} from \"react-bootstrap\"\r\n\r\nfunction Home() {\r\n  const [items,setCountries]=useState([])\r\n  const [countryList,setCountryList]=useState([])\r\n  const [isLoading,setIsLoading]=useState(true)\r\n  const [isGlobal,setGlobal]=useState('')\r\n  const [isCountryName,setCountryName]=useState('')\r\n  const [query,setQuery]=useState('')\r\n  const [flag,setFlag]=useState([])\r\n  \r\n\r\n  useEffect(()=>{\r\n      //fetches global summary if nothing has been searched\r\n    \r\n  if(query==='country' || query.length===0){\r\n    const globalSummary=async ()=>{\r\n      const res =await axios.get(`https://covid19.mathdro.id/api`)\r\n     // console.log(res)\r\n      setCountries(res.data)\r\n      setIsLoading(false)\r\n      setGlobal('global Summary')\r\n    }\r\n    globalSummary()\r\n    ///fetches summary of searched country\r\n  }else{\r\n    const fetchItems=async ()=>{\r\n      const res=await axios.get(`https://covid19.mathdro.id/api/countries/${query}`)\r\n      //console.log(res)\r\n      setCountries(res.data)\r\n      setIsLoading(false)\r\n      setGlobal(query+' '+ 'Summary')\r\n     setCountryName(query)\r\n  }\r\n  const getFlag= async ()=>{\r\n    const url=`https://restcountries.eu/rest/v2/name/${query}`\r\n    //const url=`https://public-us.opendatasoft.com/api/records/1.0/search/?dataset=country-flags&q=&facet=${query}`\r\n    const res=await axios.get(url)\r\n    console.log(res.data)\r\n    setFlag(res.data)\r\n}\r\n  getFlag()\r\n  fetchItems()\r\n  //fetch countrylist\r\n  \r\n}\r\n },[query])\r\n\r\n  return (\r\n     <Container >\r\n    \r\n       <Search getQuery={(q)=>setQuery(q)}/>\r\n       <Flags flag={flag}/>\r\n       {/* <Flags country={query} countryName={isCountryName}/> */}\r\n      \r\n        <Cards country={items} isLoading={isLoading} isGlobal={isGlobal}></Cards>\r\n        <Graph country={items} countryName={isGlobal}/>\r\n      \r\n     </Container>\r\n     \r\n  );\r\n}\r\n\r\nexport default Home\r\n","import React, { Fragment } from 'react';\r\n\r\nconst ListBox = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <li>\r\n        <div className=\"rank-number\">\r\n          <div className=\"position\">\r\n            { props.showOrder(props.data.countryRegion, props.index) }\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"rank-content\">\r\n          <div className=\"country-name\">\r\n            {props.data.countryRegion.split(', ').reverse().join(' ')} {' '}\r\n            <span className=\"province-state-name\">{props.toggleProvinceState(props.data.provinceState, props.data.countryRegion)}</span>\r\n          </div>\r\n\r\n          <div className=\"case-summary\">\r\n            <span className=\"case-summary-text text-warning\">{props.data.confirmed}</span>\r\n            <span className=\"case-summary-text text-success\">{props.data.recovered}</span>\r\n            <span className=\"case-summary-text text-danger\">{props.data.deaths}</span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      {\r\n        (props.index + 1 === 10) ? <div className=\"list-box-separator\"></div> : ''\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListBox;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport ListBox from '../cards/ListBox';\r\n\r\n\r\nconst Ranks = () => {\r\n  const [countryRank, setCountryRank] = useState([]);\r\n  const [lastNumber, setLastNumber] = useState(0);\r\n  const [showRow] = useState(10);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://covid19.mathdro.id/api/confirmed')\r\n      .then(res => {\r\n        setCountryRank(res.data)\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const toggleProvinceState = (provinceState, countryRegion) => (\r\n    provinceState && (provinceState !== countryRegion) ? `(${provinceState})` : ''\r\n  )\r\n\r\n  const showOrder = (countryRegion, index) => (\r\n    <Fragment>{(countryRegion === 'Zimbabwe') ? lastNumber : index + 1}</Fragment>\r\n  )\r\n\r\n  useEffect(() => {\r\n    countryRank.filter((data, index) => \r\n      data.countryRegion === 'Zimbabwe' ? setLastNumber(index + 1) : ''\r\n    )\r\n  }, [countryRank])\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {\r\n        loading ? <h2>loading...</h2> : \r\n        <ol className=\"rank-list\">\r\n          {\r\n            countryRank\r\n            .filter((data, index) => (index < showRow || data.countryRegion === 'Zimbabwe' ))\r\n            .map((data, index) => (\r\n              <ListBox\r\n                key={index} \r\n                index={index}\r\n                data={data} \r\n                showOrder={(a, b) => showOrder(a, b)}\r\n                toggleProvinceState={(a, b) => toggleProvinceState(a, b)}/>\r\n            ))\r\n          }\r\n         \r\n        </ol>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ranks;","import React from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"main-footer\">\r\n            <Container>\r\n                <Row>\r\n                    <Col style={{marginBottom:'10px'}}>created by Mdar_Clayy &copy;{new Date().getFullYear()} | All rights reserved </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './components/navigation/navBar';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport About from './components/pages/About';\nimport Home from './components/pages/Home';\nimport Ranks from './components/pages/Rank'\nimport {Container,Row,Col,Card,Button} from \"react-bootstrap\"\nimport Footer from './components/navigation/Footer';\nfunction App() {\n  return (\n    <div className=\"App page-container\">\n   \n      <div className=\"content-wrap\">\n   \n    <Router>\n    <NavBar/>\n      \n      \n      <Row>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route  path='/about' component={About}/>\n            <Route  path='/rank' component={Ranks}/>\n          </Switch>\n        </Row>\n    \n    </Router>\n    </div>\n    <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}